version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: blog_mongodb_dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: blog_app
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - blog_network_dev

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: blog_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - blog_network_dev

  # Development Server
  blog_server_dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: blog_server_dev
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/blog_app?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev_jwt_secret_key
      - JWT_EXPIRES_IN=7d
      - CLIENT_URL=http://localhost:3000
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
    depends_on:
      - mongodb
      - redis
    networks:
      - blog_network_dev
    volumes:
      - ./server:/app/server
      - ./shared:/app/shared
      - /app/server/node_modules
      - ./uploads:/app/uploads

  # Development Client
  blog_client_dev:
    build:
      context: .
      dockerfile: Dockerfile.client.dev
    container_name: blog_client_dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:5000/api
    depends_on:
      - blog_server_dev
    networks:
      - blog_network_dev
    volumes:
      - ./client:/app/client
      - ./shared:/app/shared
      - /app/client/node_modules

volumes:
  mongodb_dev_data:
  redis_dev_data:

networks:
  blog_network_dev:
    driver: bridge