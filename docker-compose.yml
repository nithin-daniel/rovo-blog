version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: blog_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: blog_app
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - blog_network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: blog_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - blog_network

  # Blog Application
  blog_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blog_app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/blog_app?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your_super_secret_jwt_key_change_this_in_production
      - JWT_EXPIRES_IN=7d
      - CLIENT_URL=http://localhost:3000
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      # Email configuration (update with your values)
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USER=your_email@gmail.com
      - EMAIL_PASS=your_app_password
      # Cloudinary configuration (update with your values)
      - CLOUDINARY_CLOUD_NAME=your_cloud_name
      - CLOUDINARY_API_KEY=your_api_key
      - CLOUDINARY_API_SECRET=your_api_secret
    depends_on:
      - mongodb
      - redis
    networks:
      - blog_network
    volumes:
      - ./uploads:/app/uploads

  # Nginx reverse proxy (optional, for serving client files)
  nginx:
    image: nginx:alpine
    container_name: blog_nginx
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./client/dist:/usr/share/nginx/html:ro
    depends_on:
      - blog_app
    networks:
      - blog_network

volumes:
  mongodb_data:
  redis_data:

networks:
  blog_network:
    driver: bridge